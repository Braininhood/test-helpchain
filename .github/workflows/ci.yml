name: 🔄 Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # 🧪 Test and Lint Frontend
  frontend-ci:
    name: 🎨 Frontend CI
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: |
          npm ci
          
      - name: 🔍 Run ESLint
        run: |
          npm run lint
          
      - name: 🏗️ Build application
        run: |
          npm run build
          
      - name: 🧪 Run type check
        run: |
          npx tsc --noEmit
          
      - name: 📊 Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '20.x'
        with:
          name: build-files
          path: .next/
          retention-days: 1

  # 🔒 Security Audit
  security-audit:
    name: 🛡️ Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci
        
      - name: 🔍 Run security audit
        run: |
          npm audit --audit-level moderate
          
      - name: 🔐 Check for outdated packages
        run: |
          npm outdated || true

  # 📦 Dependency Check
  dependency-check:
    name: 📋 Dependency Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔍 Analyze dependencies
        uses: actions/dependency-review-action@v4
        if: github.event_name == 'pull_request' 