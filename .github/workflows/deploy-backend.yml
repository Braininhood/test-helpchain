name: 🚀 Build Backend

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'

jobs:
  # 🧪 Test Backend (when backend exists)
  test-backend:
    name: 🧪 Test Backend
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔍 Check if backend exists
        id: check-backend
        run: |
          if [ -d "backend" ] && [ -f "backend/package.json" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "ℹ️ Backend directory not found - skipping backend build"
          fi
          
      - name: 🟢 Setup Node.js
        if: steps.check-backend.outputs.exists == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
          
      - name: 📥 Install dependencies
        if: steps.check-backend.outputs.exists == 'true'
        working-directory: ./backend
        run: npm ci
        
      - name: 🔍 Run linting
        if: steps.check-backend.outputs.exists == 'true'
        working-directory: ./backend
        run: npm run lint || echo "⚠️ Linting not configured yet"
        
      - name: 🧪 Run tests
        if: steps.check-backend.outputs.exists == 'true'
        working-directory: ./backend
        run: npm test || echo "⚠️ Tests not configured yet"
        
      - name: 🏗️ Build application
        if: steps.check-backend.outputs.exists == 'true'
        working-directory: ./backend
        run: npm run build || echo "⚠️ Build script not configured yet"

  # 📢 Build Notification
  notify:
    name: 📢 Notify Build
    needs: test-backend
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: 📢 Build status
        run: |
          if [ "${{ needs.test-backend.result }}" == "success" ]; then
            echo "✅ Backend build completed successfully!"
          elif [ "${{ needs.test-backend.result }}" == "skipped" ]; then
            echo "ℹ️ Backend build skipped - no backend found"
          else
            echo "❌ Backend build failed!"
            exit 1
          fi 