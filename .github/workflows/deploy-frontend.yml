name: 🚀 Deploy Frontend

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'backend/**'
      - '*.md'
      - '.gitignore'
  workflow_dispatch:

jobs:
  # 🧪 Pre-deployment Tests
  pre-deploy:
    name: 🧪 Pre-deployment Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: 🔍 Run linting
        run: npm run lint
        
      - name: 🧪 Run type check
        run: npm run type-check
        
      - name: 🧪 Run tests with coverage
        run: npm run test:coverage
        
      - name: 📊 Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: coverage/
          retention-days: 7

  # 🏗️ Build and Deploy Frontend
  build-deploy:
    name: 🎨 Build & Deploy Frontend
    needs: pre-deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: 📥 Install dependencies
        run: npm ci --legacy-peer-deps
        
      - name: 🏗️ Build Next.js application
        run: npm run build
        env:
          NODE_ENV: production
          
      - name: 📊 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: .next/
          retention-days: 7
          
      - name: 🧪 Test production build
        run: |
          npm run start &
          sleep 10
          curl -f http://localhost:3000 || exit 1
          pkill -f "next start"

  # 📢 Deployment Notification
  notify:
    name: 📢 Deployment Status
    needs: [pre-deploy, build-deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: 📢 Deployment status
        run: |
          if [ "${{ needs.pre-deploy.result }}" == "success" ] && [ "${{ needs.build-deploy.result }}" == "success" ]; then
            echo "✅ Frontend deployment completed successfully!"
            echo "🌐 Application is ready for production"
          else
            echo "❌ Frontend deployment failed!"
            echo "Pre-deploy: ${{ needs.pre-deploy.result }}"
            echo "Build-deploy: ${{ needs.build-deploy.result }}"
            exit 1
          fi 